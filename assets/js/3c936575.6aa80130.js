"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7602],{4233:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=o(5893),n=o(1151);const s={title:"isRouteErrorResponse",new:!0,sidebar_position:void 0},i="isRouteErrorResponse",a={id:"utils/is-route-error-response",title:"isRouteErrorResponse",description:"This returns true if a route error is a route error response.",source:"@site/react-router/docs/utils/is-route-error-response.md",sourceDirName:"utils",slug:"/utils/is-route-error-response",permalink:"/react-router-v6-searchable-docs/utils/is-route-error-response",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1660768523,formattedLastUpdatedAt:"Aug 17, 2022",frontMatter:{title:"isRouteErrorResponse",new:!0},sidebar:"tutorialSidebar",previous:{title:"generatePath",permalink:"/react-router-v6-searchable-docs/utils/generate-path"},next:{title:"Location",permalink:"/react-router-v6-searchable-docs/utils/location"}},u={},c=[];function d(e){const r={a:"a",code:"code",em:"em",h1:"h1",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"isrouteerrorresponse",children:(0,t.jsx)(r.code,{children:"isRouteErrorResponse"})}),"\n",(0,t.jsxs)(r.p,{children:["This returns ",(0,t.jsx)(r.code,{children:"true"})," if a ",(0,t.jsx)(r.a,{href:"../hooks/use-route-error",children:"route error"})," is a ",(0,t.jsx)(r.em,{children:"route error response"}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-jsx",children:'import { isRouteErrorResponse } from "react-router-dom";\n\nfunction ErrorBoundary() {\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    return (\n      <div>\n        <h1>Oops!</h1>\n        <h2>{error.status}</h2>\n        <p>{error.statusText}</p>\n        {error.data?.message && <p>{error.data.message}</p>}\n      </div>\n    );\n  } else {\n    return <div>Oops</div>;\n  }\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["When a response is thrown from an action or loader, it will be unwrapped into an ",(0,t.jsx)(r.code,{children:"ErrorResponse"})," so that your component doesn't have to deal with the complexity of unwrapping it (which would require React state and effects to deal with the promise returned from ",(0,t.jsx)(r.code,{children:"res.json()"}),")"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-jsx",children:'import { json } from "react-router-dom";\n\n<Route\n  errorElement={<ErrorBoundary />}\n  action={() => {\n    throw json(\n      { message: "email is required" },\n      { status: 400 }\n    );\n  }}\n/>;\n\nfunction ErrorBoundary() {\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    error.status; // 400\n    error.data; // { "message: "email is required" }\n  }\n}\n'})}),"\n",(0,t.jsx)("docs-info",{children:"If the user visits a route that does not match any routes in the app, React Router itself will throw a 404 response."})]})}function l(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,r,o)=>{o.d(r,{Z:()=>a,a:()=>i});var t=o(7294);const n={},s=t.createContext(n);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);