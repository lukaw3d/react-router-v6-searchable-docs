"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8561],{5722:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var t=n(5893),a=n(1151);const s={title:"loader",new:!0,sidebar_position:void 0},o="loader",d={id:"route/loader",title:"loader",description:'Each route can define a "loader" function to provide data to the route element before it renders.',source:"@site/react-router/docs/route/loader.md",sourceDirName:"route",slug:"/route/loader",permalink:"/react-router-v6-searchable-docs/route/loader",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1704353067,formattedLastUpdatedAt:"Jan 4, 2024",frontMatter:{title:"loader",new:!0},sidebar:"tutorialSidebar",previous:{title:"lazy",permalink:"/react-router-v6-searchable-docs/route/lazy"},next:{title:"shouldRevalidate",permalink:"/react-router-v6-searchable-docs/route/should-revalidate"}},i={},l=[{value:"<code>params</code>",id:"params",level:2},{value:"<code>request</code>",id:"request",level:2},{value:"<code>loader.hydrate</code>",id:"loaderhydrate",level:2},{value:"Returning Responses",id:"returning-responses",level:2},{value:"Throwing in Loaders",id:"throwing-in-loaders",level:2}];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"loader",children:(0,t.jsx)(r.code,{children:"loader"})}),"\n",(0,t.jsx)(r.p,{children:'Each route can define a "loader" function to provide data to the route element before it renders.'}),"\n",(0,t.jsxs)("docs-warning",{children:["This feature only works if using a data router, see ",(0,t.jsx)(r.a,{href:"../routers/picking-a-router",children:"Picking a Router"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",metastring:"[5-7,12-14]",children:'createBrowserRouter([\n  {\n    element: <Teams />,\n    path: "teams",\n    loader: async () => {\n      return fakeDb.from("teams").select("*");\n    },\n    children: [\n      {\n        element: <Team />,\n        path: ":teamId",\n        loader: async ({ params }) => {\n          return fetch(`/api/teams/${params.teamId}.json`);\n        },\n      },\n    ],\n  },\n]);\n'})}),"\n",(0,t.jsxs)(r.p,{children:["As the user navigates around the app, the loaders for the next matching branch of routes will be called in parallel and their data made available to components through ",(0,t.jsx)(r.a,{href:"../hooks/use-loader-data",children:(0,t.jsx)(r.code,{children:"useLoaderData"})}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"params",children:(0,t.jsx)(r.code,{children:"params"})}),"\n",(0,t.jsxs)(r.p,{children:["Route params are parsed from ",(0,t.jsx)(r.a,{href:"./route#dynamic-segments",children:"dynamic segments"})," and passed to your loader. This is useful for figuring out which resource to load:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'createBrowserRouter([\n  {\n    path: "/teams/:teamId",\n    loader: ({ params }) => {\n      return fakeGetTeam(params.teamId);\n    },\n  },\n]);\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Note that the ",(0,t.jsx)(r.code,{children:":teamId"})," in the path is parsed as provided as ",(0,t.jsx)(r.code,{children:"params.teamId"})," by the same name."]}),"\n",(0,t.jsx)(r.h2,{id:"request",children:(0,t.jsx)(r.code,{children:"request"})}),"\n",(0,t.jsxs)(r.p,{children:["This is a ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Request",children:"Fetch Request"})," instance being made to your application."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-jsx",children:"function loader({ request }) {}\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"A request?!"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:['It might seem odd at first that loaders receive a "request". Consider that ',(0,t.jsx)(r.code,{children:"<Link>"}),' does something like the following code and ask yourself, "what default behavior is being prevented here?".']}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:"[4]",children:"<a\n  href={props.to}\n  onClick={(event) => {\n    event.preventDefault();\n    navigate(props.to);\n  }}\n/>\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Without React Router, the browser would have made a ",(0,t.jsx)("i",{children:"Request"})," to your server, but React Router prevented it! Instead of the browser sending the request to your server, React Router sends the request to your loaders."]}),"\n",(0,t.jsxs)(r.p,{children:["The most common use case is creating a ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/URL",children:"URL"})," and reading the ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams",children:"URLSearchParams"})," from it:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-jsx",children:'function loader({ request }) {\n  const url = new URL(request.url);\n  const searchTerm = url.searchParams.get("q");\n  return searchProducts(searchTerm);\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Note that the APIs here are not React Router specific, but rather standard web objects: ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Request",children:"Request"}),", ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/URL",children:"URL"}),", ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams",children:"URLSearchParams"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"loaderhydrate",children:(0,t.jsx)(r.code,{children:"loader.hydrate"})}),"\n",(0,t.jsxs)(r.p,{children:["If you are ",(0,t.jsx)(r.a,{href:"../guides/ssr",children:"Server-Side Rendering"})," and leveraging the ",(0,t.jsx)(r.code,{children:"fututre.v7_partialHydration"})," flag for ",(0,t.jsx)(r.a,{href:"../routers/create-browser-router#partial-hydration-data",children:"Partial Hydration"}),", then you may wish to opt-into running a route ",(0,t.jsx)(r.code,{children:"loader"})," on initial hydration ",(0,t.jsx)(r.em,{children:"even though it has hydration data"})," (for example, to let a user prime a cache with the hydration data). To force a ",(0,t.jsx)(r.code,{children:"loader"})," to run on hydration in a partial hydration scenario, you can set a ",(0,t.jsx)(r.code,{children:"hydrate"})," property on the ",(0,t.jsx)(r.code,{children:"loader"})," function:"]}),"\n",(0,t.jsx)(r.h2,{id:"returning-responses",children:"Returning Responses"}),"\n",(0,t.jsxs)(r.p,{children:["While you can return anything you want from a loader and get access to it from ",(0,t.jsx)(r.a,{href:"../hooks/use-loader-data",children:(0,t.jsx)(r.code,{children:"useLoaderData"})}),", you can also return a web ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Response",children:"Response"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["This might not seem immediately useful, but consider ",(0,t.jsx)(r.code,{children:"fetch"}),". Since the return value of ",(0,t.jsx)(r.code,{children:"fetch"})," is a Response, and loaders understand responses, many loaders can return a simple fetch!"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'// an HTTP/REST API\nfunction loader({ request }) {\n  return fetch("/api/teams.json", {\n    signal: request.signal,\n  });\n}\n\n// or even a graphql endpoint\nfunction loader({ request, params }) {\n  return fetch("/_gql", {\n    signal: request.signal,\n    method: "post",\n    body: JSON.stringify({\n      query: gql`...`,\n      params: params,\n    }),\n  });\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"You can construct the response yourself as well:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:"[3-8]",children:'function loader({ request, params }) {\n  const data = { some: "thing" };\n  return new Response(JSON.stringify(data), {\n    status: 200,\n    headers: {\n      "Content-Type": "application/json; utf-8",\n    },\n  });\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["React Router will automatically call ",(0,t.jsx)(r.code,{children:"response.json()"})," so your components don't need to parse it while rendering:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'function SomeRoute() {\n  const data = useLoaderData();\n  // { some: "thing" }\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Using the ",(0,t.jsx)(r.a,{href:"../fetch/json",children:(0,t.jsx)(r.code,{children:"json"})})," utility simplifies this so you don't have to construct them yourself. This next example is effectively the same as the previous example:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-jsx",children:'import { json } from "react-router-dom";\n\nfunction loader({ request, params }) {\n  const data = { some: "thing" };\n  return json(data, { status: 200 });\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"If you're planning an upgrade to Remix, returning responses from every loader will make the migration smoother."}),"\n",(0,t.jsx)(r.h2,{id:"throwing-in-loaders",children:"Throwing in Loaders"}),"\n",(0,t.jsxs)(r.p,{children:["You can ",(0,t.jsx)(r.code,{children:"throw"}),' in your loader to break out of the current call stack (stop running the current code) and React Router will start over down the "error path".']}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:"[4]",children:'function loader({ request, params }) {\n  const res = await fetch(`/api/properties/${params.id}`);\n  if (res.status === 404) {\n    throw new Response("Not Found", { status: 404 });\n  }\n  return res.json();\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["For more details, read the ",(0,t.jsx)(r.a,{href:"./error-element",children:(0,t.jsx)(r.code,{children:"errorElement"})})," documentation."]})]})}function h(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>d,a:()=>o});var t=n(7294);const a={},s=t.createContext(a);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);