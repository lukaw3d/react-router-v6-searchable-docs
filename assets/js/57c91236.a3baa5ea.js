"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4012],{1922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var o=n(5893),s=n(1151);const r={title:"useOutletContext",sidebar_position:void 0},a="useOutletContext",c={id:"hooks/use-outlet-context",title:"useOutletContext",description:"Type declaration",source:"@site/react-router/docs/hooks/use-outlet-context.md",sourceDirName:"hooks",slug:"/hooks/use-outlet-context",permalink:"/react-router-v6-searchable-docs/hooks/use-outlet-context",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1689436166,formattedLastUpdatedAt:"Jul 15, 2023",frontMatter:{title:"useOutletContext"},sidebar:"tutorialSidebar",previous:{title:"useNavigation",permalink:"/react-router-v6-searchable-docs/hooks/use-navigation"},next:{title:"useOutlet",permalink:"/react-router-v6-searchable-docs/hooks/use-outlet"}},u={},i=[];function l(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"useoutletcontext",children:(0,o.jsx)(t.code,{children:"useOutletContext"})}),"\n",(0,o.jsxs)(n,{children:[(0,o.jsx)("summary",{children:"Type declaration"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"declare function useOutletContext<\n  Context = unknown\n>(): Context;\n"})})]}),"\n",(0,o.jsxs)(t.p,{children:["Often parent routes manage state or other values you want shared with child routes. You can create your own ",(0,o.jsx)(t.a,{href:"https://reactjs.org/docs/context.html",children:"context provider"})," if you like, but this is such a common situation that it's built-into ",(0,o.jsx)(t.code,{children:"<Outlet />"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:"lines=[3]",children:"function Parent() {\n  const [count, setCount] = React.useState(0);\n  return <Outlet context={[count, setCount]} />;\n}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:"lines=[4]",children:'import { useOutletContext } from "react-router-dom";\n\nfunction Child() {\n  const [count, setCount] = useOutletContext();\n  const increment = () => setCount((c) => c + 1);\n  return <button onClick={increment}>{count}</button>;\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:"If you're using TypeScript, we recommend the parent component provide a custom hook for accessing the context value. This makes it easier for consumers to get nice typings, control consumers, and know who's consuming the context value. Here's a more realistic example:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:"filename=src/routes/dashboard.tsx lines=[13,19]",children:'import * as React from "react";\nimport type { User } from "./types";\nimport { Outlet, useOutletContext } from "react-router-dom";\n\ntype ContextType = { user: User | null };\n\nexport default function Dashboard() {\n  const [user, setUser] = React.useState<User | null>(null);\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <Outlet context={{ user } satisfies ContextType} />\n    </div>\n  );\n}\n\nexport function useUser() {\n  return useOutletContext<ContextType>();\n}\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:"filename=src/routes/dashboard/messages.tsx lines=[1,4]",children:'import { useUser } from "../dashboard";\n\nexport default function DashboardMessages() {\n  const { user } = useUser();\n  return (\n    <div>\n      <h2>Messages</h2>\n      <p>Hello, {user.name}!</p>\n    </div>\n  );\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>a});var o=n(7294);const s={},r=o.createContext(s);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);