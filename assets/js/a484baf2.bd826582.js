"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7692],{1439:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=r(5893),s=r(1151);const o={title:"Await",new:!0,sidebar_position:void 0},i=void 0,a={id:"components/await",title:"Await",description:"``",source:"@site/react-router/docs/components/await.md",sourceDirName:"components",slug:"/components/await",permalink:"/react-router-v6-searchable-docs/components/await",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1673213573,formattedLastUpdatedAt:"Jan 8, 2023",frontMatter:{title:"Await",new:!0},sidebar:"tutorialSidebar",previous:{title:"Components",permalink:"/react-router-v6-searchable-docs/components/index"},next:{title:"Form",permalink:"/react-router-v6-searchable-docs/components/form"}},c={},d=[{value:"<code>&lt;Await&gt;</code>",id:"await",level:2},{value:"Type declaration",id:"type-declaration",level:2},{value:"<code>children</code>",id:"children",level:2},{value:"<code>errorElement</code>",id:"errorelement",level:2},{value:"<code>resolve</code>",id:"resolve",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"await",children:(0,t.jsx)(n.code,{children:"<Await>"})}),"\n",(0,t.jsxs)(n.p,{children:["Used to render ",(0,t.jsx)(n.a,{href:"../utils/defer",children:"deferred"})," values with automatic error handling. Make sure to review the ",(0,t.jsx)(n.a,{href:"../guides/deferred",children:"Deferred Data Guide"})," since there are a few APIs that work together with this component."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:"lines=[1,10-18]",children:'import { Await, useLoaderData } from "react-router-dom";\n\nfunction Book() {\n  const { book, reviews } = useLoaderData();\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          resolve={reviews}\n          errorElement={\n            <div>Could not load reviews \ud83d\ude2c</div>\n          }\n          children={(resolvedReviews) => (\n            <Reviews items={resolvedReviews} />\n          )}\n        />\n      </React.Suspense>\n    </div>\n  );\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," ",(0,t.jsx)(n.code,{children:"<Await>"})," expects to be rendered inside of a ",(0,t.jsx)(n.code,{children:"<React.Suspense>"})," or ",(0,t.jsx)(n.code,{children:"<React.SuspenseList>"})," parent to enable the fallback UI."]}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"declare function Await(\n  props: AwaitProps\n): React.ReactElement;\n\ninterface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\ninterface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactElement;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"children",children:(0,t.jsx)(n.code,{children:"children"})}),"\n",(0,t.jsx)(n.p,{children:"Can either be React elements or a function."}),"\n",(0,t.jsx)(n.p,{children:"When using a function, the value is provided as the only parameter."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"[2]",children:"<Await resolve={reviewsPromise}>\n  {(resolvedReviews) => <Reviews items={resolvedReviews} />}\n</Await>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When using React elements, ",(0,t.jsx)(n.a,{href:"../hooks/use-async-value",children:(0,t.jsx)(n.code,{children:"useAsyncValue"})})," will provide the data:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"[2]",children:"<Await resolve={reviewsPromise}>\n  <Reviews />\n</Await>;\n\nfunction Reviews() {\n  const resolvedReviews = useAsyncValue();\n  return <div>{/* ... */}</div>;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"errorelement",children:(0,t.jsx)(n.code,{children:"errorElement"})}),"\n",(0,t.jsxs)(n.p,{children:["The error element renders instead of the children when the promise rejects. You can access the error with ",(0,t.jsx)(n.a,{href:"../hooks/use-async-error",children:(0,t.jsx)(n.code,{children:"useAsyncError"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the promise rejects, you can provide an optional ",(0,t.jsx)(n.code,{children:"errorElement"})," to handle that error in a contextual UI via the ",(0,t.jsx)(n.code,{children:"useAsyncError"})," hook."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"[3,9]",children:"<Await\n  resolve={reviewsPromise}\n  errorElement={<ReviewsError />}\n>\n  <Reviews />\n</Await>;\n\nfunction ReviewsError() {\n  const error = useAsyncError();\n  return <div>{error.message}</div>;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you do not provide an errorElement, the rejected value will bubble up to the nearest route-level ",(0,t.jsx)(n.a,{href:"../route/error-element",children:(0,t.jsx)(n.code,{children:"errorElement"})})," and be accessible via the ",(0,t.jsx)(n.a,{href:"../hooks/use-route-error",children:(0,t.jsx)(n.code,{children:"useRouteError"})})," hook."]}),"\n",(0,t.jsx)(n.h2,{id:"resolve",children:(0,t.jsx)(n.code,{children:"resolve"})}),"\n",(0,t.jsxs)(n.p,{children:["Takes a promise returned from a ",(0,t.jsx)(n.a,{href:"../utils/defer",children:"deferred"})," ",(0,t.jsx)(n.a,{href:"../route/loader",children:"loader"})," value to be resolved and rendered."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:"[12,15,24,32-33]",children:'import {\n  defer,\n  Route,\n  useLoaderData,\n  Await,\n} from "react-router-dom";\n\n// given this route\n<Route\n  loader={async () => {\n    let book = await getBook();\n    let reviews = getReviews(); // not awaited\n    return defer({\n      book,\n      reviews, // this is a promise\n    });\n  }}\n  element={<Book />}\n/>;\n\nfunction Book() {\n  const {\n    book,\n    reviews, // this is the same promise\n  } = useLoaderData();\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          // and is the promise we pass to Await\n          resolve={reviews}\n        >\n          <Reviews />\n        </Await>\n      </React.Suspense>\n    </div>\n  );\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>i});var t=r(7294);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);