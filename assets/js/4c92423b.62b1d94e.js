"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5297],{1326:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=r(5893),o=r(1151);const s={title:"createRoutesFromElements",sidebar_position:void 0},a="createRoutesFromElements",c={id:"utils/create-routes-from-elements",title:"createRoutesFromElements",description:"createRoutesFromElements is a helper that creates route objects from `` elements. It's useful if you prefer to create your routes as JSX instead of objects.",source:"@site/react-router/docs/utils/create-routes-from-elements.md",sourceDirName:"utils",slug:"/utils/create-routes-from-elements",permalink:"/react-router-v6-searchable-docs/utils/create-routes-from-elements",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1703641491,formattedLastUpdatedAt:"Dec 27, 2023",frontMatter:{title:"createRoutesFromElements"},sidebar:"tutorialSidebar",previous:{title:"createRoutesFromChildren",permalink:"/react-router-v6-searchable-docs/utils/create-routes-from-children"},next:{title:"createSearchParams",permalink:"/react-router-v6-searchable-docs/utils/create-search-params"}},l={},u=[{value:"Type declaration",id:"type-declaration",level:2}];function i(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"createroutesfromelements",children:(0,n.jsx)(t.code,{children:"createRoutesFromElements"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"createRoutesFromElements"})," is a helper that creates route objects from ",(0,n.jsx)(t.code,{children:"<Route>"})," elements. It's useful if you prefer to create your routes as JSX instead of objects."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:'import {\n  createBrowserRouter,\n  createRoutesFromElements,\n  RouterProvider,\n} from "react-router-dom";\n\n// You can do this:\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path="/" element={<Root />}>\n      <Route path="dashboard" element={<Dashboard />} />\n      <Route path="about" element={<About />} />\n    </Route>\n  )\n);\n\n// Instead of this:\nconst router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Root />,\n    children: [\n      {\n        path: "dashboard",\n        element: <Dashboard />,\n      },\n      {\n        path: "about",\n        element: <About />,\n      },\n    ],\n  },\n]);\n'})}),"\n",(0,n.jsxs)(t.p,{children:["It's also used internally by ",(0,n.jsx)(t.a,{href:"../components/routes",children:(0,n.jsx)(t.code,{children:"<Routes>"})})," to generate a route objects from its ",(0,n.jsx)(t.a,{href:"../components/route",children:(0,n.jsx)(t.code,{children:"<Route>"})})," children."]}),"\n",(0,n.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"declare function createRoutesFromElements(\n  children: React.ReactNode\n): RouteObject[];\n\ninterface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>c,a:()=>a});var n=r(7294);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);